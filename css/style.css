/*
Reglas Css consta de 2 partes:
1) Selector:
    Es el documento HTML al que le podemos aplicar el bloque de declaracion de estilos 
    un selector podria ser cualquier etiqueta HTML, 
2) Bloque de declaraciones:
    Cada uno de los atributos que se va a modificar
    cada atributo va a tener la siguiente sintaxis.
    atributo:valor;
    atributo-de-mas-de-dos-palabras: otro-valor;
    esto va a estar entre llaves {}
 Ejemplo de las 2 partes
*/
/*
mandara a llamar una hoja de estilos dentro de otra.
importente: ES una mala practica usar el @import, porque aon bloqueante a la hora de que el navegador lee esta instruccion
*/

@import url("otra-hoja.css");

html {
  scroll-behavior: smooth;
}

h1 {
  color: orangered;
  background-color: black;
}

/*
Selectores basicos
  1)Etiquetas-son elementos HTML
  2)Identificadores- atributo id- #
  3)Clases-atributo class-.
*/
p {
  color: midnightblue;
}

/*Dar estilos con id se considera un antipatron, porque el id es unico */
#parrafo-dos {
  background-color: skyblue;
}

/*dar estilos con clases nos permite reutiizar nuestro codigo CSS*/
.bg-skyeblue {
  background: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

/* selector de hijos directos se usa el ">"*/
.hijos-directos > li {
  background-color: thistle;
}

/* si no te importa en que nivel de ese elemento padre esta el elemento al que le voy a aplicar estilos, entonces usa el espacio en blanco*/
.hijos-descendientes b {
  background-color: thistle;
}

/* Los selectores de hermanos van a aplicar los elementos que son hermanos y que estén por debajo del elemento de referencia */
.hermanos-general ~ li {
  background-color: thistle;
}

/*en este solo aplica al hermano que esta abajo, solo a uno*/
.hermanos-adyacentes + li {
  background-color: thistle;
}

/*iconos de los enlaces*/
.icons {
  width: 40px;
  height: 40px;
}

/* Selectores-atributos */
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/* El comodin del * aplica el estilo si tiene el texto en cuestion en cualquier parte */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/* El comodin del ^ aplica el estilo si tiene el texto en cuestion al inicio */
.selectores-atributos a[href^="https://"]
{
  text-decoration: none;
}

/* El comodin del $ aplica el estilo si tiene el texto en cuestion al final */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/* El comodin del ~ aplica el estilo si tiene el texto en cuestion en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/* El comodin del | aplica el estilo si tiene el texto en cuestion en una lista separada por espacios y que despues del texto en cuestion venga un guion medio */
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* Selector Universal */
* {
  font-family: sans-serif;
}

/* a todos los elementos dentro de la class selector_universal */
.selector_universal * {
  font-size: 24px;
}

/* psudoclases- Dan estilos dependiendo del contexto, posicion o estado del elemento
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
 */

/* a lo que pida requerido, los bordes esten en color amarillo */
.form-pseudoclases *:required {
  border-color: yellow;
}

/* a los que tengan valido, los vordes esten de color verde */
.form-pseudoclases *:valid {
  border-color: green;
}

/* a los que tenfan invalido, los bordes seran rojos */
.form-pseudoclases *:invalid {
  border-color: red;
}

/* en el recuadro que este seleccionado el fondo sera de color establecido */
.form-pseudoclases *:focus {
  background-color: skyblue;
}

/* a lo que tenga desavilitado, tendra de color rosa */
.form-pseudoclases *:disabled {
  background-color: pink;
}

/*
orden de definicion de las pseudoclases:
:link
:active
:visited
:hover
*/

/* a los enlaces visatos le apliquemos un color, la clase visited tiene que ir arriva del estado hover */
.menu-pseudoclases a:visited {
  color: olive;
}

/* hover: es aquel estado en el que tenemos el cursor del mouse en el elemento, este estado aplica para cualquier elemento.
hover es un estado interactivo , por eso tiene que estar al final de las pseudoclases  */
.menu-pseudoclases a:hover {
  color: orange;
}

/* cuadno el parrafo este en estado hover( la flecha del mouse este sobre el parrafo ) este incrementara su tamaño */
.p-pseudoclases:hover {
  font-size: 20px;
}

/* cuando el elemento llamado "temario-css" tenga el target(tenga en la url el id activo) */
#temario-css:target {
  background-color: lightgreen;
}
